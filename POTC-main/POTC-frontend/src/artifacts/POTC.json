{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyClaimed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "JamSaleNotActive",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintedOut",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAuthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotEnoughFunds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotJamListed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PublicSaleNotActive",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flipJamSaleState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flipPublicSaleState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "jamListMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "jamSaleActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "merkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "publicClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publicMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publicSaleActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newBurner",
          "type": "address"
        }
      ],
      "name": "setPOTCBurner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_targetPrice",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405267016345785d8a0000600755600f6008553480156200002257600080fd5b5060405162001ee438038062001ee483398101604081905262000045916200025f565b604080518082018252601881527f506172726f7473206f66207468652043617272696265616e0000000000000000602080830191825283518085019094526004845263504f544360e01b908401528151339391620000a79160009190620001a3565b508051620000bd906001906020840190620001a3565b5050600680546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350815162000121906009906020850190620001a3565b506080819052336000908152600360205260408120600f90555b600f8110156200019a5760008181526002602052604080822080546001600160a01b0319163390811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a46001016200013b565b50505062000380565b828054620001b19062000344565b90600052602060002090601f016020900481019282620001d5576000855562000220565b82601f10620001f057805160ff191683800117855562000220565b8280016001018555821562000220579182015b828111156200022057825182559160200191906001019062000203565b506200022e92915062000232565b5090565b5b808211156200022e576000815560010162000233565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200027357600080fd5b82516001600160401b03808211156200028b57600080fd5b818501915085601f830112620002a057600080fd5b815181811115620002b557620002b562000249565b604051601f8201601f19908116603f01168101908382118183101715620002e057620002e062000249565b81604052828152602093508884848701011115620002fd57600080fd5b600091505b8282101562000321578482018401518183018501529083019062000302565b82821115620003335760008484830101525b969092015195979596505050505050565b600181811c908216806200035957607f821691505b6020821081036200037a57634e487b7160e01b600052602260045260246000fd5b50919050565b608051611b41620003a36000396000818161034d0152610da20152611b416000f3fe6080604052600436106101e35760003560e01c80636817c76c11610102578063a10866ef11610095578063bc8893b411610064578063bc8893b41461056c578063c87b56dd1461058b578063db4bec44146105ab578063e985e9c5146105db57600080fd5b8063a10866ef146104e7578063a22cb465146104fc578063b5b1cd7c1461051c578063b88d4fde1461054c57600080fd5b806391b7f5ed116100d157806391b7f5ed1461048357806393018ba9146104a3578063953d5e21146104bd57806395d89b41146104d257600080fd5b80636817c76c1461040d57806370a08231146104235780637f7706d5146104435780638da5cb5b1461046357600080fd5b806326092b831161017a57806342842e0e1161014957806342842e0e1461039a57806342966c68146103ba57806356679f35146103da5780636352211e146103ed57600080fd5b806326092b83146103335780632eb4a7ab1461033b57806332cb6b0c1461036f5780633ccfd60b1461038557600080fd5b8063095ea7b3116101b6578063095ea7b3146102af57806313af4035146102cf57806318160ddd146102ef57806323b872dd1461031357600080fd5b806301ffc9a7146101e857806302fe53051461021d57806306fdde031461023f578063081812fc14610261575b600080fd5b3480156101f457600080fd5b50610208610203366004611586565b610616565b60405190151581526020015b60405180910390f35b34801561022957600080fd5b5061023d6102383660046115f3565b610668565b005b34801561024b57600080fd5b506102546106ac565b6040516102149190611665565b34801561026d57600080fd5b5061029761027c366004611698565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610214565b3480156102bb57600080fd5b5061023d6102ca3660046116c8565b61073a565b3480156102db57600080fd5b5061023d6102ea3660046116f2565b61081c565b3480156102fb57600080fd5b5061030560085481565b604051908152602001610214565b34801561031f57600080fd5b5061023d61032e36600461170d565b610892565b61023d610a59565b34801561034757600080fd5b506103057f000000000000000000000000000000000000000000000000000000000000000081565b34801561037b57600080fd5b5061030561022b81565b34801561039157600080fd5b5061023d610b38565b3480156103a657600080fd5b5061023d6103b536600461170d565b610bba565b3480156103c657600080fd5b5061023d6103d5366004611698565b610cad565b61023d6103e8366004611749565b610ceb565b3480156103f957600080fd5b50610297610408366004611698565b610e19565b34801561041957600080fd5b5061030560075481565b34801561042f57600080fd5b5061030561043e3660046116f2565b610e70565b34801561044f57600080fd5b5061023d61045e3660046116f2565b610ed3565b34801561046f57600080fd5b50600654610297906001600160a01b031681565b34801561048f57600080fd5b5061023d61049e366004611698565b610f1f565b3480156104af57600080fd5b50600a546102089060ff1681565b3480156104c957600080fd5b5061023d610f4e565b3480156104de57600080fd5b50610254610f8c565b3480156104f357600080fd5b5061023d610f99565b34801561050857600080fd5b5061023d6105173660046117be565b610fe3565b34801561052857600080fd5b506102086105373660046116f2565b600c6020526000908152604090205460ff1681565b34801561055857600080fd5b5061023d6105673660046117fa565b61104f565b34801561057857600080fd5b50600a5461020890610100900460ff1681565b34801561059757600080fd5b506102546105a6366004611698565b611137565b3480156105b757600080fd5b506102086105c63660046116f2565b600b6020526000908152604090205460ff1681565b3480156105e757600080fd5b506102086105f6366004611869565b600560209081526000928352604080842090915290825290205460ff1681565b60006301ffc9a760e01b6001600160e01b03198316148061064757506380ac58cd60e01b6001600160e01b03198316145b806106625750635b5e139f60e01b6001600160e01b03198316145b92915050565b6006546001600160a01b0316331461069b5760405162461bcd60e51b81526004016106929061189c565b60405180910390fd5b6106a7600983836114d7565b505050565b600080546106b9906118c2565b80601f01602080910402602001604051908101604052809291908181526020018280546106e5906118c2565b80156107325780601f1061070757610100808354040283529160200191610732565b820191906000526020600020905b81548152906001019060200180831161071557829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061078357506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6107c05760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610692565b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6006546001600160a01b031633146108465760405162461bcd60e51b81526004016106929061189c565b600680546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6000818152600260205260409020546001600160a01b038481169116146108e85760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610692565b6001600160a01b0382166109325760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610692565b336001600160a01b038416148061096c57506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b8061098d57506000818152600460205260409020546001600160a01b031633145b6109ca5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610692565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a54610100900460ff16610a81576040516331f423c160e21b815260040160405180910390fd5b336000908152600c602052604090205460ff1615610ab257604051630c8d9eab60e31b815260040160405180910390fd5b61022b6008546001610ac49190611912565b1115610ae357604051634237dcf160e11b815260040160405180910390fd5b600754341015610b0657604051631036b5ad60e31b815260040160405180910390fd5b336000818152600c60205260409020805460ff19166001179055600854610b2d919061116b565b600880546001019055565b6006546001600160a01b03163314610b625760405162461bcd60e51b81526004016106929061189c565b604051600090339047908381818185875af1925050503d8060008114610ba4576040519150601f19603f3d011682016040523d82523d6000602084013e610ba9565b606091505b5050905080610bb757600080fd5b50565b610bc5838383610892565b6001600160a01b0382163b1580610c6e5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610c3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c62919061192a565b6001600160e01b031916145b6106a75760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610692565b600d546001600160a01b03163314610cd85760405163ea8e4eb560e01b815260040160405180910390fd5b60088054600019019055610bb781611276565b600a5460ff16610d0e5760405163736c7ded60e11b815260040160405180910390fd5b336000908152600b602052604090205460ff1615610d3f57604051630c8d9eab60e31b815260040160405180910390fd5b600754341015610d6257604051631036b5ad60e31b815260040160405180910390fd5b6040516bffffffffffffffffffffffff193360601b166020820152600090603401604051602081830303815290604052805190602001209050610dc783837f000000000000000000000000000000000000000000000000000000000000000084611343565b610de457604051639db752f960e01b815260040160405180910390fd5b336000818152600b60205260409020805460ff19166001179055600854610e0b919061116b565b505060088054600101905550565b6000818152600260205260409020546001600160a01b031680610e6b5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610692565b919050565b60006001600160a01b038216610eb75760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b6044820152606401610692565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b03163314610efd5760405162461bcd60e51b81526004016106929061189c565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b03163314610f495760405162461bcd60e51b81526004016106929061189c565b600755565b6006546001600160a01b03163314610f785760405162461bcd60e51b81526004016106929061189c565b600a805460ff19811660ff90911615179055565b600180546106b9906118c2565b6006546001600160a01b03163314610fc35760405162461bcd60e51b81526004016106929061189c565b600a805461010060ff19821681900460ff16150261ffff19909116179055565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61105a858585610892565b6001600160a01b0384163b15806110f15750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906110a29033908a90899089908990600401611947565b6020604051808303816000875af11580156110c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e5919061192a565b6001600160e01b031916145b6111305760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610692565b5050505050565b606060096111448361135b565b6040516020016111559291906119b7565b6040516020818303038152906040529050919050565b6001600160a01b0382166111b55760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610692565b6000818152600260205260409020546001600160a01b03161561120b5760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606401610692565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000818152600260205260409020546001600160a01b0316806112c85760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610692565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600082611351868685611464565b1495945050505050565b6060816000036113825750506040805180820190915260018152600360fc1b602082015290565b8160005b81156113ac578061139681611a71565b91506113a59050600a83611aa0565b9150611386565b60008167ffffffffffffffff8111156113c7576113c7611ab4565b6040519080825280601f01601f1916602001820160405280156113f1576020820181803683370190505b5090505b841561145c57611406600183611aca565b9150611413600a86611ae1565b61141e906030611912565b60f81b81838151811061143357611433611af5565b60200101906001600160f81b031916908160001a905350611455600a86611aa0565b94506113f5565b949350505050565b600081815b848110156114ce57600086868381811061148557611485611af5565b9050602002013590508083116114aa57600083815260208290526040902092506114bb565b600081815260208490526040902092505b50806114c681611a71565b915050611469565b50949350505050565b8280546114e3906118c2565b90600052602060002090601f016020900481019282611505576000855561154b565b82601f1061151e5782800160ff1982351617855561154b565b8280016001018555821561154b579182015b8281111561154b578235825591602001919060010190611530565b5061155792915061155b565b5090565b5b80821115611557576000815560010161155c565b6001600160e01b031981168114610bb757600080fd5b60006020828403121561159857600080fd5b81356115a381611570565b9392505050565b60008083601f8401126115bc57600080fd5b50813567ffffffffffffffff8111156115d457600080fd5b6020830191508360208285010111156115ec57600080fd5b9250929050565b6000806020838503121561160657600080fd5b823567ffffffffffffffff81111561161d57600080fd5b611629858286016115aa565b90969095509350505050565b60005b83811015611650578181015183820152602001611638565b8381111561165f576000848401525b50505050565b6020815260008251806020840152611684816040850160208701611635565b601f01601f19169190910160400192915050565b6000602082840312156116aa57600080fd5b5035919050565b80356001600160a01b0381168114610e6b57600080fd5b600080604083850312156116db57600080fd5b6116e4836116b1565b946020939093013593505050565b60006020828403121561170457600080fd5b6115a3826116b1565b60008060006060848603121561172257600080fd5b61172b846116b1565b9250611739602085016116b1565b9150604084013590509250925092565b6000806020838503121561175c57600080fd5b823567ffffffffffffffff8082111561177457600080fd5b818501915085601f83011261178857600080fd5b81358181111561179757600080fd5b8660208260051b85010111156117ac57600080fd5b60209290920196919550909350505050565b600080604083850312156117d157600080fd5b6117da836116b1565b9150602083013580151581146117ef57600080fd5b809150509250929050565b60008060008060006080868803121561181257600080fd5b61181b866116b1565b9450611829602087016116b1565b935060408601359250606086013567ffffffffffffffff81111561184c57600080fd5b611858888289016115aa565b969995985093965092949392505050565b6000806040838503121561187c57600080fd5b611885836116b1565b9150611893602084016116b1565b90509250929050565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b600181811c908216806118d657607f821691505b6020821081036118f657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611925576119256118fc565b500190565b60006020828403121561193c57600080fd5b81516115a381611570565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b600081516119ad818560208601611635565b9290920192915050565b600080845481600182811c9150808316806119d357607f831692505b602080841082036119f257634e487b7160e01b86526022600452602486fd5b818015611a065760018114611a1757611a44565b60ff19861689528489019650611a44565b60008b81526020902060005b86811015611a3c5781548b820152908501908301611a23565b505084890196505b505050505050611a68611a57828661199b565b64173539b7b760d91b815260050190565b95945050505050565b600060018201611a8357611a836118fc565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611aaf57611aaf611a8a565b500490565b634e487b7160e01b600052604160045260246000fd5b600082821015611adc57611adc6118fc565b500390565b600082611af057611af0611a8a565b500690565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220339b82227b1d80d3563b050dbf80e845f165e240c85dacdd829f936743612baf64736f6c634300080d0033",
    "sourceMap": "1776:5609:8:-:0;;;1961:9;1934:36;;2187:2;2158:31;;2959:435;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2151:111:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2151:111:6;;;;2217:12;;3081:10:8;;2151:111:6;2217:12;;-1:-1:-1;;2151:111:6;2217:12;:::i;:::-;-1:-1:-1;2239:16:6;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;;1034:5:5;:14;;-1:-1:-1;;;;;;1034:14:5;-1:-1:-1;;;;;1034:14:5;;;;;;;;1064:32;;1034:14;;-1:-1:-1;;;1064:32:5;;-1:-1:-1;;1064:32:5;-1:-1:-1;3107:18:8;;::::2;::::0;:7:::2;::::0;:18:::2;::::0;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;3135:24:8::2;::::0;;;3180:10:::2;3169:22;::::0;;;:10:::2;:22;::::0;;;;3194:2:::2;3169:27:::0;;3230:148:::2;3254:2;3250:1;:6;3230:148;;;3281:11;::::0;;;:8:::2;:11;::::0;;;;;:24;;-1:-1:-1;;;;;;3281:24:8::2;3295:10;3281:24:::0;;::::2;::::0;;;3328:35;;3290:1;;3281:11;3328:35:::2;::::0;3281:11;;3328:35:::2;3258:3;;3230:148;;;;2959:435:::0;;1776:5609;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1776:5609:8;;;-1:-1:-1;1776:5609:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:11;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1150;235:6;243;296:2;284:9;275:7;271:23;267:32;264:52;;;312:1;309;302:12;264:52;339:16;;-1:-1:-1;;;;;404:14:11;;;401:34;;;431:1;428;421:12;401:34;469:6;458:9;454:22;444:32;;514:7;507:4;503:2;499:13;495:27;485:55;;536:1;533;526:12;485:55;565:2;559:9;587:2;583;580:10;577:36;;;593:18;;:::i;:::-;668:2;662:9;636:2;722:13;;-1:-1:-1;;718:22:11;;;742:2;714:31;710:40;698:53;;;766:18;;;786:22;;;763:46;760:72;;;812:18;;:::i;:::-;852:10;848:2;841:22;887:2;879:6;872:18;909:4;899:14;;950:7;945:2;940;936;932:11;928:20;925:33;922:53;;;971:1;968;961:12;922:53;993:1;984:10;;1003:129;1017:2;1014:1;1011:9;1003:129;;;1105:10;;;1101:19;;1095:26;1074:14;;;1070:23;;1063:59;1028:10;;;;1003:129;;;1150:2;1147:1;1144:9;1141:80;;;1209:1;1204:2;1199;1191:6;1187:15;1183:24;1176:35;1141:80;1271:18;;;;1265:25;1240:6;;1265:25;;-1:-1:-1;;;;;;146:1150:11:o;1301:380::-;1380:1;1376:12;;;;1423;;;1444:61;;1498:4;1490:6;1486:17;1476:27;;1444:61;1551:2;1543:6;1540:14;1520:18;1517:38;1514:161;;1597:10;1592:3;1588:20;1585:1;1578:31;1632:4;1629:1;1622:15;1660:4;1657:1;1650:15;1514:161;;1301:380;;;:::o;:::-;1776:5609:8;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101e35760003560e01c80636817c76c11610102578063a10866ef11610095578063bc8893b411610064578063bc8893b41461056c578063c87b56dd1461058b578063db4bec44146105ab578063e985e9c5146105db57600080fd5b8063a10866ef146104e7578063a22cb465146104fc578063b5b1cd7c1461051c578063b88d4fde1461054c57600080fd5b806391b7f5ed116100d157806391b7f5ed1461048357806393018ba9146104a3578063953d5e21146104bd57806395d89b41146104d257600080fd5b80636817c76c1461040d57806370a08231146104235780637f7706d5146104435780638da5cb5b1461046357600080fd5b806326092b831161017a57806342842e0e1161014957806342842e0e1461039a57806342966c68146103ba57806356679f35146103da5780636352211e146103ed57600080fd5b806326092b83146103335780632eb4a7ab1461033b57806332cb6b0c1461036f5780633ccfd60b1461038557600080fd5b8063095ea7b3116101b6578063095ea7b3146102af57806313af4035146102cf57806318160ddd146102ef57806323b872dd1461031357600080fd5b806301ffc9a7146101e857806302fe53051461021d57806306fdde031461023f578063081812fc14610261575b600080fd5b3480156101f457600080fd5b50610208610203366004611586565b610616565b60405190151581526020015b60405180910390f35b34801561022957600080fd5b5061023d6102383660046115f3565b610668565b005b34801561024b57600080fd5b506102546106ac565b6040516102149190611665565b34801561026d57600080fd5b5061029761027c366004611698565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610214565b3480156102bb57600080fd5b5061023d6102ca3660046116c8565b61073a565b3480156102db57600080fd5b5061023d6102ea3660046116f2565b61081c565b3480156102fb57600080fd5b5061030560085481565b604051908152602001610214565b34801561031f57600080fd5b5061023d61032e36600461170d565b610892565b61023d610a59565b34801561034757600080fd5b506103057f000000000000000000000000000000000000000000000000000000000000000081565b34801561037b57600080fd5b5061030561022b81565b34801561039157600080fd5b5061023d610b38565b3480156103a657600080fd5b5061023d6103b536600461170d565b610bba565b3480156103c657600080fd5b5061023d6103d5366004611698565b610cad565b61023d6103e8366004611749565b610ceb565b3480156103f957600080fd5b50610297610408366004611698565b610e19565b34801561041957600080fd5b5061030560075481565b34801561042f57600080fd5b5061030561043e3660046116f2565b610e70565b34801561044f57600080fd5b5061023d61045e3660046116f2565b610ed3565b34801561046f57600080fd5b50600654610297906001600160a01b031681565b34801561048f57600080fd5b5061023d61049e366004611698565b610f1f565b3480156104af57600080fd5b50600a546102089060ff1681565b3480156104c957600080fd5b5061023d610f4e565b3480156104de57600080fd5b50610254610f8c565b3480156104f357600080fd5b5061023d610f99565b34801561050857600080fd5b5061023d6105173660046117be565b610fe3565b34801561052857600080fd5b506102086105373660046116f2565b600c6020526000908152604090205460ff1681565b34801561055857600080fd5b5061023d6105673660046117fa565b61104f565b34801561057857600080fd5b50600a5461020890610100900460ff1681565b34801561059757600080fd5b506102546105a6366004611698565b611137565b3480156105b757600080fd5b506102086105c63660046116f2565b600b6020526000908152604090205460ff1681565b3480156105e757600080fd5b506102086105f6366004611869565b600560209081526000928352604080842090915290825290205460ff1681565b60006301ffc9a760e01b6001600160e01b03198316148061064757506380ac58cd60e01b6001600160e01b03198316145b806106625750635b5e139f60e01b6001600160e01b03198316145b92915050565b6006546001600160a01b0316331461069b5760405162461bcd60e51b81526004016106929061189c565b60405180910390fd5b6106a7600983836114d7565b505050565b600080546106b9906118c2565b80601f01602080910402602001604051908101604052809291908181526020018280546106e5906118c2565b80156107325780601f1061070757610100808354040283529160200191610732565b820191906000526020600020905b81548152906001019060200180831161071557829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061078357506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6107c05760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610692565b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6006546001600160a01b031633146108465760405162461bcd60e51b81526004016106929061189c565b600680546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6000818152600260205260409020546001600160a01b038481169116146108e85760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610692565b6001600160a01b0382166109325760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610692565b336001600160a01b038416148061096c57506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b8061098d57506000818152600460205260409020546001600160a01b031633145b6109ca5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610692565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a54610100900460ff16610a81576040516331f423c160e21b815260040160405180910390fd5b336000908152600c602052604090205460ff1615610ab257604051630c8d9eab60e31b815260040160405180910390fd5b61022b6008546001610ac49190611912565b1115610ae357604051634237dcf160e11b815260040160405180910390fd5b600754341015610b0657604051631036b5ad60e31b815260040160405180910390fd5b336000818152600c60205260409020805460ff19166001179055600854610b2d919061116b565b600880546001019055565b6006546001600160a01b03163314610b625760405162461bcd60e51b81526004016106929061189c565b604051600090339047908381818185875af1925050503d8060008114610ba4576040519150601f19603f3d011682016040523d82523d6000602084013e610ba9565b606091505b5050905080610bb757600080fd5b50565b610bc5838383610892565b6001600160a01b0382163b1580610c6e5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610c3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c62919061192a565b6001600160e01b031916145b6106a75760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610692565b600d546001600160a01b03163314610cd85760405163ea8e4eb560e01b815260040160405180910390fd5b60088054600019019055610bb781611276565b600a5460ff16610d0e5760405163736c7ded60e11b815260040160405180910390fd5b336000908152600b602052604090205460ff1615610d3f57604051630c8d9eab60e31b815260040160405180910390fd5b600754341015610d6257604051631036b5ad60e31b815260040160405180910390fd5b6040516bffffffffffffffffffffffff193360601b166020820152600090603401604051602081830303815290604052805190602001209050610dc783837f000000000000000000000000000000000000000000000000000000000000000084611343565b610de457604051639db752f960e01b815260040160405180910390fd5b336000818152600b60205260409020805460ff19166001179055600854610e0b919061116b565b505060088054600101905550565b6000818152600260205260409020546001600160a01b031680610e6b5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610692565b919050565b60006001600160a01b038216610eb75760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b6044820152606401610692565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b03163314610efd5760405162461bcd60e51b81526004016106929061189c565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b03163314610f495760405162461bcd60e51b81526004016106929061189c565b600755565b6006546001600160a01b03163314610f785760405162461bcd60e51b81526004016106929061189c565b600a805460ff19811660ff90911615179055565b600180546106b9906118c2565b6006546001600160a01b03163314610fc35760405162461bcd60e51b81526004016106929061189c565b600a805461010060ff19821681900460ff16150261ffff19909116179055565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61105a858585610892565b6001600160a01b0384163b15806110f15750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906110a29033908a90899089908990600401611947565b6020604051808303816000875af11580156110c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e5919061192a565b6001600160e01b031916145b6111305760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610692565b5050505050565b606060096111448361135b565b6040516020016111559291906119b7565b6040516020818303038152906040529050919050565b6001600160a01b0382166111b55760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610692565b6000818152600260205260409020546001600160a01b03161561120b5760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606401610692565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000818152600260205260409020546001600160a01b0316806112c85760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610692565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600082611351868685611464565b1495945050505050565b6060816000036113825750506040805180820190915260018152600360fc1b602082015290565b8160005b81156113ac578061139681611a71565b91506113a59050600a83611aa0565b9150611386565b60008167ffffffffffffffff8111156113c7576113c7611ab4565b6040519080825280601f01601f1916602001820160405280156113f1576020820181803683370190505b5090505b841561145c57611406600183611aca565b9150611413600a86611ae1565b61141e906030611912565b60f81b81838151811061143357611433611af5565b60200101906001600160f81b031916908160001a905350611455600a86611aa0565b94506113f5565b949350505050565b600081815b848110156114ce57600086868381811061148557611485611af5565b9050602002013590508083116114aa57600083815260208290526040902092506114bb565b600081815260208490526040902092505b50806114c681611a71565b915050611469565b50949350505050565b8280546114e3906118c2565b90600052602060002090601f016020900481019282611505576000855561154b565b82601f1061151e5782800160ff1982351617855561154b565b8280016001018555821561154b579182015b8281111561154b578235825591602001919060010190611530565b5061155792915061155b565b5090565b5b80821115611557576000815560010161155c565b6001600160e01b031981168114610bb757600080fd5b60006020828403121561159857600080fd5b81356115a381611570565b9392505050565b60008083601f8401126115bc57600080fd5b50813567ffffffffffffffff8111156115d457600080fd5b6020830191508360208285010111156115ec57600080fd5b9250929050565b6000806020838503121561160657600080fd5b823567ffffffffffffffff81111561161d57600080fd5b611629858286016115aa565b90969095509350505050565b60005b83811015611650578181015183820152602001611638565b8381111561165f576000848401525b50505050565b6020815260008251806020840152611684816040850160208701611635565b601f01601f19169190910160400192915050565b6000602082840312156116aa57600080fd5b5035919050565b80356001600160a01b0381168114610e6b57600080fd5b600080604083850312156116db57600080fd5b6116e4836116b1565b946020939093013593505050565b60006020828403121561170457600080fd5b6115a3826116b1565b60008060006060848603121561172257600080fd5b61172b846116b1565b9250611739602085016116b1565b9150604084013590509250925092565b6000806020838503121561175c57600080fd5b823567ffffffffffffffff8082111561177457600080fd5b818501915085601f83011261178857600080fd5b81358181111561179757600080fd5b8660208260051b85010111156117ac57600080fd5b60209290920196919550909350505050565b600080604083850312156117d157600080fd5b6117da836116b1565b9150602083013580151581146117ef57600080fd5b809150509250929050565b60008060008060006080868803121561181257600080fd5b61181b866116b1565b9450611829602087016116b1565b935060408601359250606086013567ffffffffffffffff81111561184c57600080fd5b611858888289016115aa565b969995985093965092949392505050565b6000806040838503121561187c57600080fd5b611885836116b1565b9150611893602084016116b1565b90509250929050565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b600181811c908216806118d657607f821691505b6020821081036118f657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611925576119256118fc565b500190565b60006020828403121561193c57600080fd5b81516115a381611570565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b600081516119ad818560208601611635565b9290920192915050565b600080845481600182811c9150808316806119d357607f831692505b602080841082036119f257634e487b7160e01b86526022600452602486fd5b818015611a065760018114611a1757611a44565b60ff19861689528489019650611a44565b60008b81526020902060005b86811015611a3c5781548b820152908501908301611a23565b505084890196505b505050505050611a68611a57828661199b565b64173539b7b760d91b815260050190565b95945050505050565b600060018201611a8357611a836118fc565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611aaf57611aaf611a8a565b500490565b634e487b7160e01b600052604160045260246000fd5b600082821015611adc57611adc6118fc565b500390565b600082611af057611af0611a8a565b500690565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220339b82227b1d80d3563b050dbf80e845f165e240c85dacdd829f936743612baf64736f6c634300080d0033",
    "sourceMap": "1776:5609:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4711:335:6;;;;;;;;;;-1:-1:-1;4711:335:6;;;;;:::i;:::-;;:::i;:::-;;;565:14:11;;558:22;540:41;;528:2;513:18;4711:335:6;;;;;;;;3546:88:8;;;;;;;;;;-1:-1:-1;3546:88:8;;;;;:::i;:::-;;:::i;:::-;;896:18:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1841:46::-;;;;;;;;;;-1:-1:-1;1841:46:6;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1841:46:6;;;;;;-1:-1:-1;;;;;2361:32:11;;;2343:51;;2331:2;2316:18;1841:46:6;2197:203:11;2450:282:6;;;;;;;;;;-1:-1:-1;2450:282:6;;;;;:::i;:::-;;:::i;1293:144:5:-;;;;;;;;;;-1:-1:-1;1293:144:5;;;;;:::i;:::-;;:::i;2158:31:8:-;;;;;;;;;;;;;;;;;;;3179:25:11;;;3167:2;3152:18;2158:31:8;3033:177:11;2947:741:6;;;;;;;;;;-1:-1:-1;2947:741:6;;;;;:::i;:::-;;:::i;4286:441:8:-;;;:::i;2818:35::-;;;;;;;;;;;;;;;1887:40;;;;;;;;;;;;1924:3;1887:40;;7235:148;;;;;;;;;;;;;:::i;3694:396:6:-;;;;;;;;;;-1:-1:-1;3694:396:6;;;;;:::i;:::-;;:::i;6464:188:8:-;;;;;;;;;;-1:-1:-1;6464:188:8;;;;;:::i;:::-;;:::i;5289:576::-;;;;;;:::i;:::-;;:::i;1324:149:6:-;;;;;;;;;;-1:-1:-1;1324:149:6;;;;;:::i;:::-;;:::i;1934:36:8:-;;;;;;;;;;;;;;;;1479:168:6;;;;;;;;;;-1:-1:-1;1479:168:6;;;;;:::i;:::-;;:::i;6002:100:8:-;;;;;;;;;;-1:-1:-1;6002:100:8;;;;;:::i;:::-;;:::i;679:20:5:-;;;;;;;;;;-1:-1:-1;679:20:5;;;;-1:-1:-1;;;;;679:20:5;;;7048:98:8;;;;;;;;;;-1:-1:-1;7048:98:8;;;;;:::i;:::-;;:::i;2327:25::-;;;;;;;;;;-1:-1:-1;2327:25:8;;;;;;;;6699:92;;;;;;;;;;;;;:::i;921:20:6:-;;;;;;;;;;;;;:::i;6841:132:8:-;;;;;;;;;;;;;:::i;2738:203:6:-;;;;;;;;;;-1:-1:-1;2738:203:6;;;;;:::i;:::-;;:::i;2705:45:8:-;;;;;;;;;;-1:-1:-1;2705:45:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;4096:427:6;;;;;;;;;;-1:-1:-1;4096:427:6;;;;;:::i;:::-;;:::i;2436:28:8:-;;;;;;;;;;-1:-1:-1;2436:28:8;;;;;;;;;;;3802:194;;;;;;;;;;-1:-1:-1;3802:194:8;;;;;:::i;:::-;;:::i;2557:48::-;;;;;;;;;;-1:-1:-1;2557:48:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;1894:68:6;;;;;;;;;;-1:-1:-1;1894:68:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4711:335;4787:4;-1:-1:-1;;;;;;;;;4822:25:6;;;;:100;;-1:-1:-1;;;;;;;;;;4897:25:6;;;4822:100;:175;;;-1:-1:-1;;;;;;;;;;4972:25:6;;;4822:175;4803:194;4711:335;-1:-1:-1;;4711:335:6:o;3546:88:8:-;767:5:5;;-1:-1:-1;;;;;767:5:5;753:10;:19;745:44;;;;-1:-1:-1;;;745:44:5;;;;;;;:::i;:::-;;;;;;;;;3613:14:8::1;:7;3623:4:::0;;3613:14:::1;:::i;:::-;;3546:88:::0;;:::o;896:18:6:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2450:282::-;2521:13;2537:12;;;:8;:12;;;;;;-1:-1:-1;;;;;2537:12:6;2568:10;:19;;;:58;;-1:-1:-1;;;;;;2591:23:6;;;;;;:16;:23;;;;;;;;2615:10;2591:35;;;;;;;;;;2568:58;2560:85;;;;-1:-1:-1;;;2560:85:6;;6527:2:11;2560:85:6;;;6509:21:11;6566:2;6546:18;;;6539:30;-1:-1:-1;;;6585:18:11;;;6578:44;6639:18;;2560:85:6;6325:338:11;2560:85:6;2656:15;;;;:11;:15;;;;;;:25;;-1:-1:-1;;;;;;2656:25:6;-1:-1:-1;;;;;2656:25:6;;;;;;;;;2697:28;;2656:15;;2697:28;;;;;;;2511:221;2450:282;;:::o;1293:144:5:-;767:5;;-1:-1:-1;;;;;767:5:5;753:10;:19;745:44;;;;-1:-1:-1;;;745:44:5;;;;;;;:::i;:::-;1364:5:::1;:16:::0;;-1:-1:-1;;;;;;1364:16:5::1;-1:-1:-1::0;;;;;1364:16:5;::::1;::::0;;::::1;::::0;;;1396:34:::1;::::0;1409:10:::1;::::0;1396:34:::1;::::0;-1:-1:-1;;1396:34:5::1;1293:144:::0;:::o;2947:741:6:-;3078:12;;;;:8;:12;;;;;;-1:-1:-1;;;;;3070:20:6;;;3078:12;;3070:20;3062:43;;;;-1:-1:-1;;;3062:43:6;;6870:2:11;3062:43:6;;;6852:21:11;6909:2;6889:18;;;6882:30;-1:-1:-1;;;6928:18:11;;;6921:40;6978:18;;3062:43:6;6668:334:11;3062:43:6;-1:-1:-1;;;;;3124:16:6;;3116:46;;;;-1:-1:-1;;;3116:46:6;;7209:2:11;3116:46:6;;;7191:21:11;7248:2;7228:18;;;7221:30;-1:-1:-1;;;7267:18:11;;;7260:47;7324:18;;3116:46:6;7007:341:11;3116:46:6;3194:10;-1:-1:-1;;;;;3194:18:6;;;;:56;;-1:-1:-1;;;;;;3216:22:6;;;;;;:16;:22;;;;;;;;3239:10;3216:34;;;;;;;;;;3194:56;:89;;;-1:-1:-1;3268:15:6;;;;:11;:15;;;;;;-1:-1:-1;;;;;3268:15:6;3254:10;:29;3194:89;3173:150;;;;-1:-1:-1;;;3173:150:6;;6527:2:11;3173:150:6;;;6509:21:11;6566:2;6546:18;;;6539:30;-1:-1:-1;;;6585:18:11;;;6578:44;6639:18;;3173:150:6;6325:338:11;3173:150:6;-1:-1:-1;;;;;3523:16:6;;;;;;;:10;:16;;;;;;;;:18;;-1:-1:-1;;3523:18:6;;;3556:14;;;;;;;;;:16;;3523:18;3556:16;;;3593:12;;;:8;:12;;;;;:17;;-1:-1:-1;;;;;;3593:17:6;;;;;;;;3628:11;:15;;;;;;3621:22;;;;;;;;3659;;3602:2;;3556:14;3523:16;3659:22;;;2947:741;;;:::o;4286:441:8:-;4338:16;;;;;;;4333:51;;4363:21;;-1:-1:-1;;;4363:21:8;;;;;;;;;;;4333:51;4412:10;4398:25;;;;:13;:25;;;;;;;;4394:54;;;4432:16;;-1:-1:-1;;;4432:16:8;;;;;;;;;;;4394:54;1924:3;4462:11;;4476:1;4462:15;;;;:::i;:::-;:28;4458:52;;;4499:11;;-1:-1:-1;;;4499:11:8;;;;;;;;;;;4458:52;4538:9;;4525;4524:23;4520:52;;;4556:16;;-1:-1:-1;;;4556:16:8;;;;;;;;;;;4520:52;4621:10;4607:25;;;;:13;:25;;;;;:32;;-1:-1:-1;;4607:32:8;4635:4;4607:32;;;4671:11;;4653:30;;4621:10;4653:5;:30::i;:::-;4699:11;4697:13;;;;;;4286:441::o;7235:148::-;767:5:5;;-1:-1:-1;;;;;767:5:5;753:10;:19;745:44;;;;-1:-1:-1;;;745:44:5;;;;;;;:::i;:::-;7301:49:8::1;::::0;7283:12:::1;::::0;7301:10:::1;::::0;7324:21:::1;::::0;7283:12;7301:49;7283:12;7301:49;7324:21;7301:10;:49:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7282:68;;;7368:7;7360:16;;;::::0;::::1;;7272:111;7235:148::o:0;3694:396:6:-;3813:26;3826:4;3832:2;3836;3813:12;:26::i;:::-;-1:-1:-1;;;;;3871:14:6;;;:19;;:170;;-1:-1:-1;3910:66:6;;-1:-1:-1;;;3910:66:6;;;3951:10;3910:66;;;8133:34:11;-1:-1:-1;;;;;8203:15:11;;;8183:18;;;8176:43;8235:18;;;8228:34;;;8298:3;8278:18;;;8271:31;-1:-1:-1;8318:19:11;;;8311:30;3996:45:6;;3910:40;;;;3996:45;;8358:19:11;;3910:66:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3910:131:6;;3871:170;3850:233;;;;-1:-1:-1;;;3850:233:6;;8844:2:11;3850:233:6;;;8826:21:11;8883:2;8863:18;;;8856:30;-1:-1:-1;;;8902:18:11;;;8895:46;8958:18;;3850:233:6;8642:340:11;6464:188:8;6530:10;;-1:-1:-1;;;;;6530:10:8;6516;:24;6512:52;;6549:15;;-1:-1:-1;;;6549:15:8;;;;;;;;;;;6512:52;6600:11;6598:13;;-1:-1:-1;;6598:13:8;;;6631:14;6637:7;6631:5;:14::i;5289:576::-;5373:13;;;;5368:45;;5395:18;;-1:-1:-1;;;5395:18:8;;;;;;;;;;;5368:45;5444:10;5427:28;;;;:16;:28;;;;;;;;5423:57;;;5464:16;;-1:-1:-1;;;5464:16:8;;;;;;;;;;;5423:57;5508:9;;5495;5494:23;5490:52;;;5526:16;;-1:-1:-1;;;5526:16:8;;;;;;;;;;;5490:52;5578:28;;-1:-1:-1;;5595:10:8;9136:2:11;9132:15;9128:53;5578:28:8;;;9116:66:11;5553:12:8;;9198::11;;5578:28:8;;;;;;;;;;;;5568:39;;;;;;5553:54;;5622:50;5641:12;;5655:10;5667:4;5622:18;:50::i;:::-;5617:90;;5693:14;;-1:-1:-1;;;5693:14:8;;;;;;;;;;;5617:90;5759:10;5742:28;;;;:16;:28;;;;;:35;;-1:-1:-1;;5742:35:8;5773:4;5742:35;;;5809:11;;5791:30;;5759:10;5791:5;:30::i;:::-;-1:-1:-1;;5837:11:8;5835:13;;;;;;-1:-1:-1;5289:576:8:o;1324:149:6:-;1382:13;1424:12;;;:8;:12;;;;;;-1:-1:-1;;;;;1424:12:6;;1407:59;;;;-1:-1:-1;;;1407:59:6;;9423:2:11;1407:59:6;;;9405:21:11;9462:2;9442:18;;;9435:30;-1:-1:-1;;;9481:18:11;;;9474:40;9531:18;;1407:59:6;9221:334:11;1407:59:6;1324:149;;;:::o;1479:168::-;1542:7;-1:-1:-1;;;;;1569:19:6;;1561:44;;;;-1:-1:-1;;;1561:44:6;;9762:2:11;1561:44:6;;;9744:21:11;9801:2;9781:18;;;9774:30;-1:-1:-1;;;9820:18:11;;;9813:42;9872:18;;1561:44:6;9560:336:11;1561:44:6;-1:-1:-1;;;;;;1623:17:6;;;;;:10;:17;;;;;;;1479:168::o;6002:100:8:-;767:5:5;;-1:-1:-1;;;;;767:5:5;753:10;:19;745:44;;;;-1:-1:-1;;;745:44:5;;;;;;;:::i;:::-;6072:10:8::1;:23:::0;;-1:-1:-1;;;;;;6072:23:8::1;-1:-1:-1::0;;;;;6072:23:8;;;::::1;::::0;;;::::1;::::0;;6002:100::o;7048:98::-;767:5:5;;-1:-1:-1;;;;;767:5:5;753:10;:19;745:44;;;;-1:-1:-1;;;745:44:5;;;;;;;:::i;:::-;7115:9:8::1;:24:::0;7048:98::o;6699:92::-;767:5:5;;-1:-1:-1;;;;;767:5:5;753:10;:19;745:44;;;;-1:-1:-1;;;745:44:5;;;;;;;:::i;:::-;6771:13:8::1;::::0;;-1:-1:-1;;6754:30:8;::::1;6771:13;::::0;;::::1;6770:14;6754:30;::::0;;6699:92::o;921:20:6:-;;;;;;;:::i;6841:132:8:-;767:5:5;;-1:-1:-1;;;;;767:5:5;753:10;:19;745:44;;;;-1:-1:-1;;;745:44:5;;;;;;;:::i;:::-;6899:13:8::1;:21:::0;;::::1;-1:-1:-1::0;;6899:21:8;::::1;6950:16:::0;;::::1;6899:21;6950:16;6949:17;6930:36;-1:-1:-1::0;;6930:36:8;;;::::1;::::0;;6841:132::o;2738:203:6:-;2840:10;2823:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;2823:38:6;;;;;;;;;;;;:49;;-1:-1:-1;;2823:49:6;;;;;;;;;;2888:46;;540:41:11;;;2823:38:6;;2840:10;2888:46;;513:18:11;2888:46:6;;;;;;;2738:203;;:::o;4096:427::-;4244:26;4257:4;4263:2;4267;4244:12;:26::i;:::-;-1:-1:-1;;;;;4302:14:6;;;:19;;:172;;-1:-1:-1;4341:68:6;;-1:-1:-1;;;4341:68:6;;;4429:45;-1:-1:-1;;;;;4341:40:6;;;4429:45;;4341:68;;4382:10;;4394:4;;4400:2;;4404:4;;;;4341:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4341:133:6;;4302:172;4281:235;;;;-1:-1:-1;;;4281:235:6;;8844:2:11;4281:235:6;;;8826:21:11;8883:2;8863:18;;;8856:30;-1:-1:-1;;;8902:18:11;;;8895:46;8958:18;;4281:235:6;8642:340:11;4281:235:6;4096:427;;;;;:::o;3802:194:8:-;3895:13;3955:7;3964:14;:3;:12;:14::i;:::-;3938:50;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3924:65;;3802:194;;;:::o;5240:371:6:-;-1:-1:-1;;;;;5314:16:6;;5306:46;;;;-1:-1:-1;;;5306:46:6;;7209:2:11;5306:46:6;;;7191:21:11;7248:2;7228:18;;;7221:30;-1:-1:-1;;;7267:18:11;;;7260:47;7324:18;;5306:46:6;7007:341:11;5306:46:6;5395:1;5371:12;;;:8;:12;;;;;;-1:-1:-1;;;;;5371:12:6;:26;5363:53;;;;-1:-1:-1;;;5363:53:6;;12510:2:11;5363:53:6;;;12492:21:11;12549:2;12529:18;;;12522:30;-1:-1:-1;;;12568:18:11;;;12561:44;12622:18;;5363:53:6;12308:338:11;5363:53:6;-1:-1:-1;;;;;5506:14:6;;;;;;:10;:14;;;;;;;;:16;;;;;;5543:12;;;:8;:12;;;;;;:17;;-1:-1:-1;;;;;;5543:17:6;;;;;5576:28;5552:2;;5506:14;;5576:28;;5506:14;;5576:28;5240:371;;:::o;5617:::-;5671:13;5687:12;;;:8;:12;;;;;;-1:-1:-1;;;;;5687:12:6;;5710:42;;;;-1:-1:-1;;;5710:42:6;;9423:2:11;5710:42:6;;;9405:21:11;9462:2;9442:18;;;9435:30;-1:-1:-1;;;9481:18:11;;;9474:40;9531:18;;5710:42:6;9221:334:11;5710:42:6;-1:-1:-1;;;;;5842:17:6;;;;;;:10;:17;;;;;;;;:19;;-1:-1:-1;;5842:19:6;;;5889:12;;;:8;:12;;;;;5882:19;;-1:-1:-1;;;;;;5882:19:6;;;;;;5919:11;:15;;;;;;5912:22;;;;;;;;5950:31;5898:2;;5842:17;5950:31;;5842:17;;5950:31;5661:327;5617:371;:::o;1170:186:7:-;1293:4;1345;1316:25;1329:5;;1336:4;1316:12;:25::i;:::-;:33;;1170:186;-1:-1:-1;;;;;1170:186:7:o;328:703:9:-;384:13;601:5;610:1;601:10;597:51;;-1:-1:-1;;627:10:9;;;;;;;;;;;;-1:-1:-1;;;627:10:9;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:9;;-1:-1:-1;773:2:9;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:9;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:9;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:9;;;;;;;;-1:-1:-1;972:11:9;981:2;972:11;;:::i;:::-;;;844:150;;;1017:6;328:703;-1:-1:-1;;;;328:703:9:o;1707:692:7:-;1816:7;1862:4;1816:7;1876:488;1896:16;;;1876:488;;;1933:20;1956:5;;1962:1;1956:8;;;;;;;:::i;:::-;;;;;;;1933:31;;1998:12;1982;:28;1978:376;;2497:13;2549:15;;;2584:4;2577:15;;;2630:4;2614:21;;2108:57;;1978:376;;;2497:13;2549:15;;;2584:4;2577:15;;;2630:4;2614:21;;2282:57;;1978:376;-1:-1:-1;1914:3:7;;;;:::i;:::-;;;;1876:488;;;-1:-1:-1;2380:12:7;1707:692;-1:-1:-1;;;;1707:692:7:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:11;-1:-1:-1;;;;;;88:32:11;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:11:o;592:348::-;644:8;654:6;708:3;701:4;693:6;689:17;685:27;675:55;;726:1;723;716:12;675:55;-1:-1:-1;749:20:11;;792:18;781:30;;778:50;;;824:1;821;814:12;778:50;861:4;853:6;849:17;837:29;;913:3;906:4;897:6;889;885:19;881:30;878:39;875:59;;;930:1;927;920:12;875:59;592:348;;;;;:::o;945:411::-;1016:6;1024;1077:2;1065:9;1056:7;1052:23;1048:32;1045:52;;;1093:1;1090;1083:12;1045:52;1133:9;1120:23;1166:18;1158:6;1155:30;1152:50;;;1198:1;1195;1188:12;1152:50;1237:59;1288:7;1279:6;1268:9;1264:22;1237:59;:::i;:::-;1315:8;;1211:85;;-1:-1:-1;945:411:11;-1:-1:-1;;;;945:411:11:o;1361:258::-;1433:1;1443:113;1457:6;1454:1;1451:13;1443:113;;;1533:11;;;1527:18;1514:11;;;1507:39;1479:2;1472:10;1443:113;;;1574:6;1571:1;1568:13;1565:48;;;1609:1;1600:6;1595:3;1591:16;1584:27;1565:48;;1361:258;;;:::o;1624:383::-;1773:2;1762:9;1755:21;1736:4;1805:6;1799:13;1848:6;1843:2;1832:9;1828:18;1821:34;1864:66;1923:6;1918:2;1907:9;1903:18;1898:2;1890:6;1886:15;1864:66;:::i;:::-;1991:2;1970:15;-1:-1:-1;;1966:29:11;1951:45;;;;1998:2;1947:54;;1624:383;-1:-1:-1;;1624:383:11:o;2012:180::-;2071:6;2124:2;2112:9;2103:7;2099:23;2095:32;2092:52;;;2140:1;2137;2130:12;2092:52;-1:-1:-1;2163:23:11;;2012:180;-1:-1:-1;2012:180:11:o;2405:173::-;2473:20;;-1:-1:-1;;;;;2522:31:11;;2512:42;;2502:70;;2568:1;2565;2558:12;2583:254;2651:6;2659;2712:2;2700:9;2691:7;2687:23;2683:32;2680:52;;;2728:1;2725;2718:12;2680:52;2751:29;2770:9;2751:29;:::i;:::-;2741:39;2827:2;2812:18;;;;2799:32;;-1:-1:-1;;;2583:254:11:o;2842:186::-;2901:6;2954:2;2942:9;2933:7;2929:23;2925:32;2922:52;;;2970:1;2967;2960:12;2922:52;2993:29;3012:9;2993:29;:::i;3215:328::-;3292:6;3300;3308;3361:2;3349:9;3340:7;3336:23;3332:32;3329:52;;;3377:1;3374;3367:12;3329:52;3400:29;3419:9;3400:29;:::i;:::-;3390:39;;3448:38;3482:2;3471:9;3467:18;3448:38;:::i;:::-;3438:48;;3533:2;3522:9;3518:18;3505:32;3495:42;;3215:328;;;;;:::o;3730:615::-;3816:6;3824;3877:2;3865:9;3856:7;3852:23;3848:32;3845:52;;;3893:1;3890;3883:12;3845:52;3933:9;3920:23;3962:18;4003:2;3995:6;3992:14;3989:34;;;4019:1;4016;4009:12;3989:34;4057:6;4046:9;4042:22;4032:32;;4102:7;4095:4;4091:2;4087:13;4083:27;4073:55;;4124:1;4121;4114:12;4073:55;4164:2;4151:16;4190:2;4182:6;4179:14;4176:34;;;4206:1;4203;4196:12;4176:34;4259:7;4254:2;4244:6;4241:1;4237:14;4233:2;4229:23;4225:32;4222:45;4219:65;;;4280:1;4277;4270:12;4219:65;4311:2;4303:11;;;;;4333:6;;-1:-1:-1;3730:615:11;;-1:-1:-1;;;;3730:615:11:o;4350:347::-;4415:6;4423;4476:2;4464:9;4455:7;4451:23;4447:32;4444:52;;;4492:1;4489;4482:12;4444:52;4515:29;4534:9;4515:29;:::i;:::-;4505:39;;4594:2;4583:9;4579:18;4566:32;4641:5;4634:13;4627:21;4620:5;4617:32;4607:60;;4663:1;4660;4653:12;4607:60;4686:5;4676:15;;;4350:347;;;;;:::o;4702:627::-;4799:6;4807;4815;4823;4831;4884:3;4872:9;4863:7;4859:23;4855:33;4852:53;;;4901:1;4898;4891:12;4852:53;4924:29;4943:9;4924:29;:::i;:::-;4914:39;;4972:38;5006:2;4995:9;4991:18;4972:38;:::i;:::-;4962:48;;5057:2;5046:9;5042:18;5029:32;5019:42;;5112:2;5101:9;5097:18;5084:32;5139:18;5131:6;5128:30;5125:50;;;5171:1;5168;5161:12;5125:50;5210:59;5261:7;5252:6;5241:9;5237:22;5210:59;:::i;:::-;4702:627;;;;-1:-1:-1;4702:627:11;;-1:-1:-1;5288:8:11;;5184:85;4702:627;-1:-1:-1;;;4702:627:11:o;5334:260::-;5402:6;5410;5463:2;5451:9;5442:7;5438:23;5434:32;5431:52;;;5479:1;5476;5469:12;5431:52;5502:29;5521:9;5502:29;:::i;:::-;5492:39;;5550:38;5584:2;5573:9;5569:18;5550:38;:::i;:::-;5540:48;;5334:260;;;;;:::o;5599:336::-;5801:2;5783:21;;;5840:2;5820:18;;;5813:30;-1:-1:-1;;;5874:2:11;5859:18;;5852:42;5926:2;5911:18;;5599:336::o;5940:380::-;6019:1;6015:12;;;;6062;;;6083:61;;6137:4;6129:6;6125:17;6115:27;;6083:61;6190:2;6182:6;6179:14;6159:18;6156:38;6153:161;;6236:10;6231:3;6227:20;6224:1;6217:31;6271:4;6268:1;6261:15;6299:4;6296:1;6289:15;6153:161;;5940:380;;;:::o;7353:127::-;7414:10;7409:3;7405:20;7402:1;7395:31;7445:4;7442:1;7435:15;7469:4;7466:1;7459:15;7485:128;7525:3;7556:1;7552:6;7549:1;7546:13;7543:39;;;7562:18;;:::i;:::-;-1:-1:-1;7598:9:11;;7485:128::o;8388:249::-;8457:6;8510:2;8498:9;8489:7;8485:23;8481:32;8478:52;;;8526:1;8523;8516:12;8478:52;8558:9;8552:16;8577:30;8601:5;8577:30;:::i;9901:662::-;-1:-1:-1;;;;;10180:15:11;;;10162:34;;10232:15;;10227:2;10212:18;;10205:43;10279:2;10264:18;;10257:34;;;10327:3;10322:2;10307:18;;10300:31;;;10347:19;;10340:35;;;10105:4;10368:6;10418;10142:3;10397:19;;10384:49;10483:1;10477:3;10468:6;10457:9;10453:22;10449:32;10442:43;10553:3;10546:2;10542:7;10537:2;10529:6;10525:15;10521:29;10510:9;10506:45;10502:55;10494:63;;9901:662;;;;;;;;:::o;10694:185::-;10736:3;10774:5;10768:12;10789:52;10834:6;10829:3;10822:4;10815:5;10811:16;10789:52;:::i;:::-;10857:16;;;;;10694:185;-1:-1:-1;;10694:185:11:o;11002:1301::-;11279:3;11308:1;11341:6;11335:13;11371:3;11393:1;11421:9;11417:2;11413:18;11403:28;;11481:2;11470:9;11466:18;11503;11493:61;;11547:4;11539:6;11535:17;11525:27;;11493:61;11573:2;11621;11613:6;11610:14;11590:18;11587:38;11584:165;;-1:-1:-1;;;11648:33:11;;11704:4;11701:1;11694:15;11734:4;11655:3;11722:17;11584:165;11765:18;11792:104;;;;11910:1;11905:320;;;;11758:467;;11792:104;-1:-1:-1;;11825:24:11;;11813:37;;11870:16;;;;-1:-1:-1;11792:104:11;;11905:320;10641:1;10634:14;;;10678:4;10665:18;;12000:1;12014:165;12028:6;12025:1;12022:13;12014:165;;;12106:14;;12093:11;;;12086:35;12149:16;;;;12043:10;;12014:165;;;12018:3;;12208:6;12203:3;12199:16;12192:23;;11758:467;;;;;;;12241:56;12266:30;12292:3;12284:6;12266:30;:::i;:::-;-1:-1:-1;;;10944:20:11;;10989:1;10980:11;;10884:113;12241:56;12234:63;11002:1301;-1:-1:-1;;;;;11002:1301:11:o;12651:135::-;12690:3;12711:17;;;12708:43;;12731:18;;:::i;:::-;-1:-1:-1;12778:1:11;12767:13;;12651:135::o;12791:127::-;12852:10;12847:3;12843:20;12840:1;12833:31;12883:4;12880:1;12873:15;12907:4;12904:1;12897:15;12923:120;12963:1;12989;12979:35;;12994:18;;:::i;:::-;-1:-1:-1;13028:9:11;;12923:120::o;13048:127::-;13109:10;13104:3;13100:20;13097:1;13090:31;13140:4;13137:1;13130:15;13164:4;13161:1;13154:15;13180:125;13220:4;13248:1;13245;13242:8;13239:34;;;13253:18;;:::i;:::-;-1:-1:-1;13290:9:11;;13180:125::o;13310:112::-;13342:1;13368;13358:35;;13373:18;;:::i;:::-;-1:-1:-1;13407:9:11;;13310:112::o;13427:127::-;13488:10;13483:3;13479:20;13476:1;13469:31;13519:4;13516:1;13509:15;13543:4;13540:1;13533:15",
    "linkReferences": {},
    "immutableReferences": {
      "21133": [
        {
          "start": 845,
          "length": 32
        },
        {
          "start": 3490,
          "length": 32
        }
      ]
    }
  },
  "ast": {
    "absolutePath": "/home/temp/POTC/POTC-contracts/src/POTC.sol",
    "id": 21459,
    "exportedSymbols": {
      "AlreadyClaimed": [
        21081
      ],
      "ERC721": [
        20953
      ],
      "ERC721TokenReceiver": [
        20973
      ],
      "JamSaleNotActive": [
        21084
      ],
      "MerkleProof": [
        21066
      ],
      "MintedOut": [
        21075
      ],
      "NotAuthorized": [
        21093
      ],
      "NotEnoughFunds": [
        21078
      ],
      "NotJamListed": [
        21090
      ],
      "Owned": [
        20409
      ],
      "POTC": [
        21458
      ],
      "PublicSaleNotActive": [
        21087
      ],
      "Strings": [
        21661
      ]
    },
    "nodeType": "SourceUnit",
    "src": "1007:6379:8",
    "nodes": [
      {
        "id": 21068,
        "nodeType": "PragmaDirective",
        "src": "1007:25:8",
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 21069,
        "nodeType": "ImportDirective",
        "src": "1034:35:8",
        "absolutePath": "/home/temp/POTC/POTC-contracts/lib/solmate/src/tokens/ERC721.sol",
        "file": "solmate/tokens/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21459,
        "sourceUnit": 20974,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21070,
        "nodeType": "ImportDirective",
        "src": "1070:32:8",
        "absolutePath": "/home/temp/POTC/POTC-contracts/lib/solmate/src/auth/Owned.sol",
        "file": "solmate/auth/Owned.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21459,
        "sourceUnit": 20410,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21071,
        "nodeType": "ImportDirective",
        "src": "1103:27:8",
        "absolutePath": "/home/temp/POTC/POTC-contracts/src/MerkleProof.sol",
        "file": "./MerkleProof.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21459,
        "sourceUnit": 21067,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21072,
        "nodeType": "ImportDirective",
        "src": "1131:23:8",
        "absolutePath": "/home/temp/POTC/POTC-contracts/src/Strings.sol",
        "file": "./Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21459,
        "sourceUnit": 21662,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21075,
        "nodeType": "ErrorDefinition",
        "src": "1235:18:8",
        "documentation": {
          "id": 21073,
          "nodeType": "StructuredDocumentation",
          "src": "1156:79:8",
          "text": "@notice Thrown when attempting to mint while total supply has been minted."
        },
        "errorSelector": "846fb9e2",
        "name": "MintedOut",
        "nameLocation": "1241:9:8",
        "parameters": {
          "id": 21074,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1250:2:8"
        }
      },
      {
        "id": 21078,
        "nodeType": "ErrorDefinition",
        "src": "1313:23:8",
        "documentation": {
          "id": 21076,
          "nodeType": "StructuredDocumentation",
          "src": "1254:59:8",
          "text": "@notice Thrown when minter does not have enough ether."
        },
        "errorSelector": "81b5ad68",
        "name": "NotEnoughFunds",
        "nameLocation": "1319:14:8",
        "parameters": {
          "id": 21077,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1333:2:8"
        }
      },
      {
        "id": 21081,
        "nodeType": "ErrorDefinition",
        "src": "1429:23:8",
        "documentation": {
          "id": 21079,
          "nodeType": "StructuredDocumentation",
          "src": "1337:92:8",
          "text": "@notice Thrown when a public minter / whitelist minter has reached their mint capacity."
        },
        "errorSelector": "646cf558",
        "name": "AlreadyClaimed",
        "nameLocation": "1435:14:8",
        "parameters": {
          "id": 21080,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1449:2:8"
        }
      },
      {
        "id": 21084,
        "nodeType": "ErrorDefinition",
        "src": "1505:25:8",
        "documentation": {
          "id": 21082,
          "nodeType": "StructuredDocumentation",
          "src": "1453:52:8",
          "text": "@notice Thrown when the jam sale is not active."
        },
        "errorSelector": "e6d8fbda",
        "name": "JamSaleNotActive",
        "nameLocation": "1511:16:8",
        "parameters": {
          "id": 21083,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1527:2:8"
        }
      },
      {
        "id": 21087,
        "nodeType": "ErrorDefinition",
        "src": "1586:28:8",
        "documentation": {
          "id": 21085,
          "nodeType": "StructuredDocumentation",
          "src": "1531:55:8",
          "text": "@notice Thrown when the public sale is not active."
        },
        "errorSelector": "c7d08f04",
        "name": "PublicSaleNotActive",
        "nameLocation": "1592:19:8",
        "parameters": {
          "id": 21086,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1611:2:8"
        }
      },
      {
        "id": 21090,
        "nodeType": "ErrorDefinition",
        "src": "1678:21:8",
        "documentation": {
          "id": 21088,
          "nodeType": "StructuredDocumentation",
          "src": "1615:63:8",
          "text": "@notice Thrown when the msg.sender is not in the jam list."
        },
        "errorSelector": "9db752f9",
        "name": "NotJamListed",
        "nameLocation": "1684:12:8",
        "parameters": {
          "id": 21089,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1696:2:8"
        }
      },
      {
        "id": 21093,
        "nodeType": "ErrorDefinition",
        "src": "1752:22:8",
        "documentation": {
          "id": 21091,
          "nodeType": "StructuredDocumentation",
          "src": "1700:52:8",
          "text": "@notice Thrown when a signer is not authorized."
        },
        "errorSelector": "ea8e4eb5",
        "name": "NotAuthorized",
        "nameLocation": "1758:13:8",
        "parameters": {
          "id": 21092,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1771:2:8"
        }
      },
      {
        "id": 21458,
        "nodeType": "ContractDefinition",
        "src": "1776:5609:8",
        "nodes": [
          {
            "id": 21100,
            "nodeType": "UsingForDirective",
            "src": "1813:26:8",
            "global": false,
            "libraryName": {
              "id": 21098,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21661,
              "src": "1819:7:8"
            },
            "typeName": {
              "id": 21099,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1831:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 21104,
            "nodeType": "VariableDeclaration",
            "src": "1887:40:8",
            "constant": true,
            "documentation": {
              "id": 21101,
              "nodeType": "StructuredDocumentation",
              "src": "1845:37:8",
              "text": "@notice The total supply of POTC."
            },
            "functionSelector": "32cb6b0c",
            "mutability": "constant",
            "name": "MAX_SUPPLY",
            "nameLocation": "1911:10:8",
            "scope": 21458,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21102,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1887:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "353535",
              "id": 21103,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1924:3:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_555_by_1",
                "typeString": "int_const 555"
              },
              "value": "555"
            },
            "visibility": "public"
          },
          {
            "id": 21107,
            "nodeType": "VariableDeclaration",
            "src": "1934:36:8",
            "constant": false,
            "functionSelector": "6817c76c",
            "mutability": "mutable",
            "name": "mintPrice",
            "nameLocation": "1949:9:8",
            "scope": 21458,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21105,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1934:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e31",
              "id": 21106,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1961:9:8",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "0.1"
            },
            "visibility": "public"
          },
          {
            "id": 21111,
            "nodeType": "VariableDeclaration",
            "src": "2158:31:8",
            "constant": false,
            "documentation": {
              "id": 21108,
              "nodeType": "StructuredDocumentation",
              "src": "1977:176:8",
              "text": "@notice The current supply starts at 15 due to the team minting from tokenID 0 to 14. \n @dev Using total supply as naming to make the pre-reveal easier on amazon S3."
            },
            "functionSelector": "18160ddd",
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "2173:11:8",
            "scope": 21458,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21109,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2158:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3135",
              "id": 21110,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2187:2:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_15_by_1",
                "typeString": "int_const 15"
              },
              "value": "15"
            },
            "visibility": "public"
          },
          {
            "id": 21114,
            "nodeType": "VariableDeclaration",
            "src": "2226:14:8",
            "constant": false,
            "documentation": {
              "id": 21112,
              "nodeType": "StructuredDocumentation",
              "src": "2196:25:8",
              "text": "@notice The base URI."
            },
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "2233:7:8",
            "scope": 21458,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 21113,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2226:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21117,
            "nodeType": "VariableDeclaration",
            "src": "2327:25:8",
            "constant": false,
            "documentation": {
              "id": 21115,
              "nodeType": "StructuredDocumentation",
              "src": "2247:75:8",
              "text": "@notice Returns true when the jam list sale is active, false otherwise."
            },
            "functionSelector": "93018ba9",
            "mutability": "mutable",
            "name": "jamSaleActive",
            "nameLocation": "2339:13:8",
            "scope": 21458,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 21116,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2327:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 21120,
            "nodeType": "VariableDeclaration",
            "src": "2436:28:8",
            "constant": false,
            "documentation": {
              "id": 21118,
              "nodeType": "StructuredDocumentation",
              "src": "2358:73:8",
              "text": "@notice Returns true when the public sale is active, false otherwise."
            },
            "functionSelector": "bc8893b4",
            "mutability": "mutable",
            "name": "publicSaleActive",
            "nameLocation": "2448:16:8",
            "scope": 21458,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 21119,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2436:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 21125,
            "nodeType": "VariableDeclaration",
            "src": "2557:48:8",
            "constant": false,
            "documentation": {
              "id": 21121,
              "nodeType": "StructuredDocumentation",
              "src": "2471:81:8",
              "text": "@notice Keeps track of whether jamlist has already minted or not. Max 1 mint."
            },
            "functionSelector": "db4bec44",
            "mutability": "mutable",
            "name": "whitelistClaimed",
            "nameLocation": "2589:16:8",
            "scope": 21458,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 21124,
              "keyType": {
                "id": 21122,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2565:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2557:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 21123,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2576:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 21130,
            "nodeType": "VariableDeclaration",
            "src": "2705:45:8",
            "constant": false,
            "documentation": {
              "id": 21126,
              "nodeType": "StructuredDocumentation",
              "src": "2611:89:8",
              "text": "@notice Keeps track of whether a public minter has already minted or not. Max 1 mint."
            },
            "functionSelector": "b5b1cd7c",
            "mutability": "mutable",
            "name": "publicClaimed",
            "nameLocation": "2737:13:8",
            "scope": 21458,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 21129,
              "keyType": {
                "id": 21127,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2713:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2705:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 21128,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2724:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 21133,
            "nodeType": "VariableDeclaration",
            "src": "2818:35:8",
            "constant": false,
            "documentation": {
              "id": 21131,
              "nodeType": "StructuredDocumentation",
              "src": "2757:56:8",
              "text": "@notice Merkle root hash for whitelist verification."
            },
            "functionSelector": "2eb4a7ab",
            "mutability": "immutable",
            "name": "merkleRoot",
            "nameLocation": "2843:10:8",
            "scope": 21458,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 21132,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2818:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 21136,
            "nodeType": "VariableDeclaration",
            "src": "2926:26:8",
            "constant": false,
            "documentation": {
              "id": 21134,
              "nodeType": "StructuredDocumentation",
              "src": "2859:62:8",
              "text": "@notice Address of the signer who is allowed to burn POTC."
            },
            "mutability": "mutable",
            "name": "potcBurner",
            "nameLocation": "2942:10:8",
            "scope": 21458,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 21135,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2926:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 21197,
            "nodeType": "FunctionDefinition",
            "src": "2959:435:8",
            "body": {
              "id": 21196,
              "nodeType": "Block",
              "src": "3097:297:8",
              "statements": [
                {
                  "expression": {
                    "id": 21153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21151,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21114,
                      "src": "3107:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21152,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21138,
                      "src": "3117:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3107:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 21154,
                  "nodeType": "ExpressionStatement",
                  "src": "3107:18:8"
                },
                {
                  "expression": {
                    "id": 21157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21155,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21133,
                      "src": "3135:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21156,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21140,
                      "src": "3148:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3135:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 21158,
                  "nodeType": "ExpressionStatement",
                  "src": "3135:24:8"
                },
                {
                  "expression": {
                    "id": 21164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 21159,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20455,
                        "src": "3169:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 21162,
                      "indexExpression": {
                        "expression": {
                          "id": 21160,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3180:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3180:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3169:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3135",
                      "id": 21163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3194:2:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_15_by_1",
                        "typeString": "int_const 15"
                      },
                      "value": "15"
                    },
                    "src": "3169:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21165,
                  "nodeType": "ExpressionStatement",
                  "src": "3169:27:8"
                },
                {
                  "id": 21195,
                  "nodeType": "UncheckedBlock",
                  "src": "3206:182:8",
                  "statements": [
                    {
                      "body": {
                        "id": 21193,
                        "nodeType": "Block",
                        "src": "3263:115:8",
                        "statements": [
                          {
                            "expression": {
                              "id": 21181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 21176,
                                  "name": "_ownerOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20451,
                                  "src": "3281:8:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                    "typeString": "mapping(uint256 => address)"
                                  }
                                },
                                "id": 21178,
                                "indexExpression": {
                                  "id": 21177,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21167,
                                  "src": "3290:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "3281:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "id": 21179,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3295:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 21180,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3295:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3281:24:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 21182,
                            "nodeType": "ExpressionStatement",
                            "src": "3281:24:8"
                          },
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 21186,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3345:1:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 21185,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3337:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 21184,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3337:7:8",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 21187,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3337:10:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 21188,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3349:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 21189,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3349:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 21190,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21167,
                                  "src": "3361:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 21183,
                                "name": "Transfer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20420,
                                "src": "3328:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 21191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3328:35:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 21192,
                            "nodeType": "EmitStatement",
                            "src": "3323:40:8"
                          }
                        ]
                      },
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 21172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 21170,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21167,
                          "src": "3250:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "3135",
                          "id": 21171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3254:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          "value": "15"
                        },
                        "src": "3250:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 21194,
                      "initializationExpression": {
                        "assignments": [
                          21167
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 21167,
                            "mutability": "mutable",
                            "name": "i",
                            "nameLocation": "3243:1:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 21194,
                            "src": "3235:9:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 21166,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3235:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 21169,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 21168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3247:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3235:13:8"
                      },
                      "loopExpression": {
                        "expression": {
                          "id": 21174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": true,
                          "src": "3258:3:8",
                          "subExpression": {
                            "id": 21173,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21167,
                            "src": "3260:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 21175,
                        "nodeType": "ExpressionStatement",
                        "src": "3258:3:8"
                      },
                      "nodeType": "ForStatement",
                      "src": "3230:148:8"
                    }
                  ]
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "506172726f7473206f66207468652043617272696265616e",
                    "id": 21143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3031:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f8333b81d8e335aa4ff563c80a82a5c42274a1a44123eac08e5b06af13be9a4a",
                      "typeString": "literal_string \"Parrots of the Carribean\""
                    },
                    "value": "Parrots of the Carribean"
                  },
                  {
                    "hexValue": "504f5443",
                    "id": 21144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3059:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a1bfe32465194e61ea4b6a3e5c4354d5f369db21844160e78471200115f1845c",
                      "typeString": "literal_string \"POTC\""
                    },
                    "value": "POTC"
                  }
                ],
                "id": 21145,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 21142,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20953,
                  "src": "3024:6:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "3024:42:8"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 21147,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "3081:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 21148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "3081:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 21149,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 21146,
                  "name": "Owned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20409,
                  "src": "3075:5:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "3075:17:8"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 21141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21138,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "2985:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 21197,
                  "src": "2971:22:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21137,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2971:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21140,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "3003:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 21197,
                  "src": "2995:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 21139,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2995:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2970:45:8"
            },
            "returnParameters": {
              "id": 21150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3097:0:8"
            },
            "scope": 21458,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21210,
            "nodeType": "FunctionDefinition",
            "src": "3546:88:8",
            "body": {
              "id": 21209,
              "nodeType": "Block",
              "src": "3603:31:8",
              "statements": [
                {
                  "expression": {
                    "id": 21207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21205,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21114,
                      "src": "3613:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21206,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21200,
                      "src": "3623:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "3613:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 21208,
                  "nodeType": "ExpressionStatement",
                  "src": "3613:14:8"
                }
              ]
            },
            "documentation": {
              "id": 21198,
              "nodeType": "StructuredDocumentation",
              "src": "3400:141:8",
              "text": "@notice Allows the owner to change the base URI of POTC's corresponding metadata.\n @param _uri The new URI to set the base URI to."
            },
            "functionSelector": "02fe5305",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 21203,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 21202,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20372,
                  "src": "3593:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "3593:9:8"
              }
            ],
            "name": "setURI",
            "nameLocation": "3555:6:8",
            "parameters": {
              "id": 21201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21200,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "3578:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 21210,
                  "src": "3562:20:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21199,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3562:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3561:22:8"
            },
            "returnParameters": {
              "id": 21204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3603:0:8"
            },
            "scope": 21458,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 21232,
            "nodeType": "FunctionDefinition",
            "src": "3802:194:8",
            "baseFunctions": [
              20447
            ],
            "body": {
              "id": 21231,
              "nodeType": "Block",
              "src": "3914:82:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21223,
                            "name": "baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21114,
                            "src": "3955:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 21224,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21213,
                                "src": "3964:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 21225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21543,
                              "src": "3964:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 21226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3964:14:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "2e6a736f6e",
                            "id": 21227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3980:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                              "typeString": "literal_string \".json\""
                            },
                            "value": ".json"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                              "typeString": "literal_string \".json\""
                            }
                          ],
                          "expression": {
                            "id": 21221,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3938:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 21222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3938:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 21228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3938:50:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 21220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3931:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 21219,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3931:6:8",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 21229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3931:58:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 21218,
                  "id": 21230,
                  "nodeType": "Return",
                  "src": "3924:65:8"
                }
              ]
            },
            "documentation": {
              "id": 21211,
              "nodeType": "StructuredDocumentation",
              "src": "3640:157:8",
              "text": "@notice The URI pointing to the metadata of a specific assett.\n @param _id The token ID of the requested parrot.\n @return The metadata URI."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "3811:8:8",
            "overrides": {
              "id": 21215,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3869:8:8"
            },
            "parameters": {
              "id": 21214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21213,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "3828:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 21232,
                  "src": "3820:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21212,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3820:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3819:13:8"
            },
            "returnParameters": {
              "id": 21218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21217,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21232,
                  "src": "3895:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21216,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3895:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3894:15:8"
            },
            "scope": 21458,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21286,
            "nodeType": "FunctionDefinition",
            "src": "4286:441:8",
            "body": {
              "id": 21285,
              "nodeType": "Block",
              "src": "4323:404:8",
              "statements": [
                {
                  "condition": {
                    "id": 21237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4337:17:8",
                    "subExpression": {
                      "id": 21236,
                      "name": "publicSaleActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21120,
                      "src": "4338:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21241,
                  "nodeType": "IfStatement",
                  "src": "4333:51:8",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 21238,
                        "name": "PublicSaleNotActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21087,
                        "src": "4363:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 21239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4363:21:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 21240,
                    "nodeType": "RevertStatement",
                    "src": "4356:28:8"
                  }
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 21242,
                      "name": "publicClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21130,
                      "src": "4398:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 21245,
                    "indexExpression": {
                      "expression": {
                        "id": 21243,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4412:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 21244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4412:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4398:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21249,
                  "nodeType": "IfStatement",
                  "src": "4394:54:8",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 21246,
                        "name": "AlreadyClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21081,
                        "src": "4432:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 21247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4432:16:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 21248,
                    "nodeType": "RevertStatement",
                    "src": "4425:23:8"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 21254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 21252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 21250,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21111,
                        "src": "4462:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 21251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4476:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4462:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 21253,
                      "name": "MAX_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21104,
                      "src": "4480:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4462:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21258,
                  "nodeType": "IfStatement",
                  "src": "4458:52:8",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 21255,
                        "name": "MintedOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21075,
                        "src": "4499:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 21256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4499:11:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 21257,
                    "nodeType": "RevertStatement",
                    "src": "4492:18:8"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 21263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "expression": {
                            "id": 21259,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4525:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 21260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4525:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 21261,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4524:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 21262,
                      "name": "mintPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21107,
                      "src": "4538:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4524:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21267,
                  "nodeType": "IfStatement",
                  "src": "4520:52:8",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 21264,
                        "name": "NotEnoughFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21078,
                        "src": "4556:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 21265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4556:16:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 21266,
                    "nodeType": "RevertStatement",
                    "src": "4549:23:8"
                  }
                },
                {
                  "id": 21284,
                  "nodeType": "UncheckedBlock",
                  "src": "4583:138:8",
                  "statements": [
                    {
                      "expression": {
                        "id": 21273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 21268,
                            "name": "publicClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21130,
                            "src": "4607:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 21271,
                          "indexExpression": {
                            "expression": {
                              "id": 21269,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4621:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 21270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4621:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "4607:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "74727565",
                          "id": 21272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4635:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4607:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 21274,
                      "nodeType": "ExpressionStatement",
                      "src": "4607:32:8"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 21276,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4659:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 21277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4659:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 21278,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21111,
                            "src": "4671:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 21275,
                          "name": "_mint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20823,
                          "src": "4653:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256)"
                          }
                        },
                        "id": 21279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4653:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 21280,
                      "nodeType": "ExpressionStatement",
                      "src": "4653:30:8"
                    },
                    {
                      "expression": {
                        "id": 21282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": true,
                        "src": "4697:13:8",
                        "subExpression": {
                          "id": 21281,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21111,
                          "src": "4699:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 21283,
                      "nodeType": "ExpressionStatement",
                      "src": "4697:13:8"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 21233,
              "nodeType": "StructuredDocumentation",
              "src": "4002:279:8",
              "text": "@notice Public POTC mint.\n @dev Allows any non-contract signer to mint a single POTC. Capped by 1.\n @dev Jamlisted addresses can join mint both one POTC during jam sale & public sale.\n @dev Current supply addition can be unchecked, as it cannot overflow."
            },
            "functionSelector": "26092b83",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "publicMint",
            "nameLocation": "4295:10:8",
            "parameters": {
              "id": 21234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4305:2:8"
            },
            "returnParameters": {
              "id": 21235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4323:0:8"
            },
            "scope": 21458,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21355,
            "nodeType": "FunctionDefinition",
            "src": "5289:576:8",
            "body": {
              "id": 21354,
              "nodeType": "Block",
              "src": "5358:507:8",
              "statements": [
                {
                  "condition": {
                    "id": 21294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5372:14:8",
                    "subExpression": {
                      "id": 21293,
                      "name": "jamSaleActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21117,
                      "src": "5373:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21298,
                  "nodeType": "IfStatement",
                  "src": "5368:45:8",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 21295,
                        "name": "JamSaleNotActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21084,
                        "src": "5395:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 21296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5395:18:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 21297,
                    "nodeType": "RevertStatement",
                    "src": "5388:25:8"
                  }
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 21299,
                      "name": "whitelistClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21125,
                      "src": "5427:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 21302,
                    "indexExpression": {
                      "expression": {
                        "id": 21300,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5444:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 21301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5444:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5427:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21306,
                  "nodeType": "IfStatement",
                  "src": "5423:57:8",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 21303,
                        "name": "AlreadyClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21081,
                        "src": "5464:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 21304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5464:16:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 21305,
                    "nodeType": "RevertStatement",
                    "src": "5457:23:8"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 21311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "expression": {
                            "id": 21307,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5495:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 21308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5495:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 21309,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5494:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 21310,
                      "name": "mintPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21107,
                      "src": "5508:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5494:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21315,
                  "nodeType": "IfStatement",
                  "src": "5490:52:8",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 21312,
                        "name": "NotEnoughFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21078,
                        "src": "5526:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 21313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5526:16:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 21314,
                    "nodeType": "RevertStatement",
                    "src": "5519:23:8"
                  }
                },
                {
                  "assignments": [
                    21317
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21317,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "5561:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 21354,
                      "src": "5553:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 21316,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5553:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21325,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 21321,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5595:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 21322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5595:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21319,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5578:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 21320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5578:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 21323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5578:28:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 21318,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5568:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 21324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5568:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5553:54:8"
                },
                {
                  "condition": {
                    "id": 21332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5621:51:8",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 21328,
                          "name": "_merkleProof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21290,
                          "src": "5641:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                            "typeString": "bytes32[] calldata"
                          }
                        },
                        {
                          "id": 21329,
                          "name": "merkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21133,
                          "src": "5655:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 21330,
                          "name": "leaf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21317,
                          "src": "5667:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                            "typeString": "bytes32[] calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 21326,
                          "name": "MerkleProof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21066,
                          "src": "5622:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MerkleProof_$21066_$",
                            "typeString": "type(library MerkleProof)"
                          }
                        },
                        "id": 21327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "verify",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20997,
                        "src": "5622:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                          "typeString": "function (bytes32[] calldata,bytes32,bytes32) pure returns (bool)"
                        }
                      },
                      "id": 21331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5622:50:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21336,
                  "nodeType": "IfStatement",
                  "src": "5617:90:8",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 21333,
                        "name": "NotJamListed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21090,
                        "src": "5693:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 21334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5693:14:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 21335,
                    "nodeType": "RevertStatement",
                    "src": "5686:21:8"
                  }
                },
                {
                  "id": 21353,
                  "nodeType": "UncheckedBlock",
                  "src": "5718:141:8",
                  "statements": [
                    {
                      "expression": {
                        "id": 21342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 21337,
                            "name": "whitelistClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21125,
                            "src": "5742:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 21340,
                          "indexExpression": {
                            "expression": {
                              "id": 21338,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5759:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 21339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5759:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "5742:28:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "74727565",
                          "id": 21341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5773:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "5742:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 21343,
                      "nodeType": "ExpressionStatement",
                      "src": "5742:35:8"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 21345,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5797:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 21346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5797:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 21347,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21111,
                            "src": "5809:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 21344,
                          "name": "_mint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20823,
                          "src": "5791:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256)"
                          }
                        },
                        "id": 21348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5791:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 21349,
                      "nodeType": "ExpressionStatement",
                      "src": "5791:30:8"
                    },
                    {
                      "expression": {
                        "id": 21351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": true,
                        "src": "5835:13:8",
                        "subExpression": {
                          "id": 21350,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21111,
                          "src": "5837:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 21352,
                      "nodeType": "ExpressionStatement",
                      "src": "5835:13:8"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 21287,
              "nodeType": "StructuredDocumentation",
              "src": "4733:551:8",
              "text": "@notice Mints a POTC for a signer on the jamlist. Gets the tokenID correspondign to the current supply.\n @dev We do not keep track of the whitelist supply, considering only a total of 444 addresses will be valid in the merkle tree.\n @dev This means that the maximum supply including full jamlist mint and team mint can be 459 at most, as each address can mint once.\n @dev Current supply addition can be unchecked, as it cannot overflow.\n @param _merkleProof The merkle proof based on the address of the signer as input."
            },
            "functionSelector": "56679f35",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "jamListMint",
            "nameLocation": "5298:11:8",
            "parameters": {
              "id": 21291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21290,
                  "mutability": "mutable",
                  "name": "_merkleProof",
                  "nameLocation": "5329:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 21355,
                  "src": "5310:31:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 21288,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5310:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 21289,
                    "nodeType": "ArrayTypeName",
                    "src": "5310:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5309:33:8"
            },
            "returnParameters": {
              "id": 21292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5358:0:8"
            },
            "scope": 21458,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21368,
            "nodeType": "FunctionDefinition",
            "src": "6002:100:8",
            "body": {
              "id": 21367,
              "nodeType": "Block",
              "src": "6062:40:8",
              "statements": [
                {
                  "expression": {
                    "id": 21365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21363,
                      "name": "potcBurner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21136,
                      "src": "6072:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21364,
                      "name": "_newBurner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21358,
                      "src": "6085:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6072:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21366,
                  "nodeType": "ExpressionStatement",
                  "src": "6072:23:8"
                }
              ]
            },
            "documentation": {
              "id": 21356,
              "nodeType": "StructuredDocumentation",
              "src": "5871:126:8",
              "text": "@notice Authorize a specific address to serve as the POTC burner.\n @param _newBurner The address of the new burner."
            },
            "functionSelector": "7f7706d5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 21361,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 21360,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20372,
                  "src": "6052:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "6052:9:8"
              }
            ],
            "name": "setPOTCBurner",
            "nameLocation": "6011:13:8",
            "parameters": {
              "id": 21359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21358,
                  "mutability": "mutable",
                  "name": "_newBurner",
                  "nameLocation": "6033:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 21368,
                  "src": "6025:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6025:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6024:20:8"
            },
            "returnParameters": {
              "id": 21362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6062:0:8"
            },
            "scope": 21458,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21391,
            "nodeType": "FunctionDefinition",
            "src": "6464:188:8",
            "body": {
              "id": 21390,
              "nodeType": "Block",
              "src": "6502:150:8",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 21377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 21374,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6516:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 21375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6516:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 21376,
                      "name": "potcBurner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21136,
                      "src": "6530:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6516:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21381,
                  "nodeType": "IfStatement",
                  "src": "6512:52:8",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 21378,
                        "name": "NotAuthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21093,
                        "src": "6549:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 21379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6549:15:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 21380,
                    "nodeType": "RevertStatement",
                    "src": "6542:22:8"
                  }
                },
                {
                  "id": 21385,
                  "nodeType": "UncheckedBlock",
                  "src": "6574:48:8",
                  "statements": [
                    {
                      "expression": {
                        "id": 21383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "--",
                        "prefix": true,
                        "src": "6598:13:8",
                        "subExpression": {
                          "id": 21382,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21111,
                          "src": "6600:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 21384,
                      "nodeType": "ExpressionStatement",
                      "src": "6598:13:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21387,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21371,
                        "src": "6637:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21386,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20870,
                      "src": "6631:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 21388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6631:14:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21389,
                  "nodeType": "ExpressionStatement",
                  "src": "6631:14:8"
                }
              ]
            },
            "documentation": {
              "id": 21369,
              "nodeType": "StructuredDocumentation",
              "src": "6108:351:8",
              "text": "@notice Burn a POTC with a specific token id.\n @dev No onlyOwner check considering an authorized address other than the owner is burning.\n @dev !NOTE: Both publicSale & jamSale should be inactive.\n @dev Unlikely that the totalSupply will be below 0. Hence, unchecked.\n @param tokenId The token ID of the parrot to burn."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "6473:4:8",
            "parameters": {
              "id": 21372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21371,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6486:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 21391,
                  "src": "6478:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6478:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6477:17:8"
            },
            "returnParameters": {
              "id": 21373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6502:0:8"
            },
            "scope": 21458,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21403,
            "nodeType": "FunctionDefinition",
            "src": "6699:92:8",
            "body": {
              "id": 21402,
              "nodeType": "Block",
              "src": "6744:47:8",
              "statements": [
                {
                  "expression": {
                    "id": 21400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21397,
                      "name": "jamSaleActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21117,
                      "src": "6754:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "6770:14:8",
                      "subExpression": {
                        "id": 21398,
                        "name": "jamSaleActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21117,
                        "src": "6771:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6754:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21401,
                  "nodeType": "ExpressionStatement",
                  "src": "6754:30:8"
                }
              ]
            },
            "documentation": {
              "id": 21392,
              "nodeType": "StructuredDocumentation",
              "src": "6658:36:8",
              "text": "@notice Flip the jam sale state."
            },
            "functionSelector": "953d5e21",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 21395,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 21394,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20372,
                  "src": "6734:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "6734:9:8"
              }
            ],
            "name": "flipJamSaleState",
            "nameLocation": "6708:16:8",
            "parameters": {
              "id": 21393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6724:2:8"
            },
            "returnParameters": {
              "id": 21396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6744:0:8"
            },
            "scope": 21458,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21419,
            "nodeType": "FunctionDefinition",
            "src": "6841:132:8",
            "body": {
              "id": 21418,
              "nodeType": "Block",
              "src": "6889:84:8",
              "statements": [
                {
                  "expression": {
                    "id": 21411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21409,
                      "name": "jamSaleActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21117,
                      "src": "6899:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 21410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6915:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6899:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21412,
                  "nodeType": "ExpressionStatement",
                  "src": "6899:21:8"
                },
                {
                  "expression": {
                    "id": 21416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21413,
                      "name": "publicSaleActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21120,
                      "src": "6930:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "6949:17:8",
                      "subExpression": {
                        "id": 21414,
                        "name": "publicSaleActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21120,
                        "src": "6950:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6930:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21417,
                  "nodeType": "ExpressionStatement",
                  "src": "6930:36:8"
                }
              ]
            },
            "documentation": {
              "id": 21404,
              "nodeType": "StructuredDocumentation",
              "src": "6797:39:8",
              "text": "@notice Flip the public sale state."
            },
            "functionSelector": "a10866ef",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 21407,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 21406,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20372,
                  "src": "6879:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "6879:9:8"
              }
            ],
            "name": "flipPublicSaleState",
            "nameLocation": "6850:19:8",
            "parameters": {
              "id": 21405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6869:2:8"
            },
            "returnParameters": {
              "id": 21408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6889:0:8"
            },
            "scope": 21458,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21432,
            "nodeType": "FunctionDefinition",
            "src": "7048:98:8",
            "body": {
              "id": 21431,
              "nodeType": "Block",
              "src": "7105:41:8",
              "statements": [
                {
                  "expression": {
                    "id": 21429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21427,
                      "name": "mintPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21107,
                      "src": "7115:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21428,
                      "name": "_targetPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21422,
                      "src": "7127:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7115:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21430,
                  "nodeType": "ExpressionStatement",
                  "src": "7115:24:8"
                }
              ]
            },
            "documentation": {
              "id": 21420,
              "nodeType": "StructuredDocumentation",
              "src": "6979:64:8",
              "text": "@notice Set the price of mint, in case there is no mint out."
            },
            "functionSelector": "91b7f5ed",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 21425,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 21424,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20372,
                  "src": "7095:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "7095:9:8"
              }
            ],
            "name": "setPrice",
            "nameLocation": "7057:8:8",
            "parameters": {
              "id": 21423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21422,
                  "mutability": "mutable",
                  "name": "_targetPrice",
                  "nameLocation": "7074:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 21432,
                  "src": "7066:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21421,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7066:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7065:22:8"
            },
            "returnParameters": {
              "id": 21426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7105:0:8"
            },
            "scope": 21458,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21457,
            "nodeType": "FunctionDefinition",
            "src": "7235:148:8",
            "body": {
              "id": 21456,
              "nodeType": "Block",
              "src": "7272:111:8",
              "statements": [
                {
                  "assignments": [
                    21439,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21439,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "7288:7:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 21456,
                      "src": "7283:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 21438,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7283:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 21451,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 21449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7347:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 21440,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7301:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 21441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7301:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 21442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "7301:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 21448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 21445,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7332:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_POTC_$21458",
                                  "typeString": "contract POTC"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_POTC_$21458",
                                  "typeString": "contract POTC"
                                }
                              ],
                              "id": 21444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7324:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21443,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7324:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7324:13:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 21447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "7324:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "7301:45:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 21450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7301:49:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7282:68:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21453,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21439,
                        "src": "7368:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21452,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7360:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 21454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7360:16:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21455,
                  "nodeType": "ExpressionStatement",
                  "src": "7360:16:8"
                }
              ]
            },
            "documentation": {
              "id": 21433,
              "nodeType": "StructuredDocumentation",
              "src": "7152:78:8",
              "text": "@notice Transfer all funds from contract to the contract deployer address."
            },
            "functionSelector": "3ccfd60b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 21436,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 21435,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20372,
                  "src": "7262:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "7262:9:8"
              }
            ],
            "name": "withdraw",
            "nameLocation": "7244:8:8",
            "parameters": {
              "id": 21434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7252:2:8"
            },
            "returnParameters": {
              "id": 21437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7272:0:8"
            },
            "scope": 21458,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21094,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20953,
              "src": "1793:6:8"
            },
            "id": 21095,
            "nodeType": "InheritanceSpecifier",
            "src": "1793:6:8"
          },
          {
            "baseName": {
              "id": 21096,
              "name": "Owned",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20409,
              "src": "1801:5:8"
            },
            "id": 21097,
            "nodeType": "InheritanceSpecifier",
            "src": "1801:5:8"
          }
        ],
        "canonicalName": "POTC",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21458,
          20409,
          20953
        ],
        "name": "POTC",
        "nameLocation": "1785:4:8",
        "scope": 21459,
        "usedErrors": [
          21075,
          21078,
          21081,
          21084,
          21087,
          21090,
          21093
        ]
      }
    ],
    "license": "MIT"
  }
}